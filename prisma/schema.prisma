generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   authorId  Int
//   author    User     @relation(fields: [authorId], references: [id])
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   userId Int     @unique
//   user   User    @relation(fields: [userId], references: [id])
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }

model ECard {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  father         String
  mother         String
  bride          String
  groom          String
  couple         String
  phone_number   String
  published      Boolean       @default(false)
  youtubeURL     String?
  primary_font   String
  secondary_font String
  images         CardGallery[]
  donation       Donation?
  event          Event?
  heirs          Heirs[]
  Design         Design        @relation(fields: [designId], references: [designId])
  designId       String
  Plans          Plans       @relation(fields: [plan], references: [name])
  plan           String
}

model Heirs {
  id           Int     @id  @default(autoincrement())
  name         String?
  phone_number String?
  relationship String?
  eCardId      String?
  ECard        ECard?   @relation(fields: [eCardId], references: [id])
}

model Event {
  id       Int      @id @default(autoincrement())
  venue    String
  address  String
  date     DateTime @db.Date
  time     String
  gMap     String?
  greeting String
  eCardId  String  @unique
  ECard    ECard   @relation(fields: [eCardId], references: [id])
}

model Donation {
  id        Int     @id @default(autoincrement())
  name      String?
  bank      String?
  accountNo String?
  qrCode    String?
  eCardId   String? @unique
  ECard     ECard?  @relation(fields: [eCardId], references: [id])
}

model Design {
  designId String @unique
  category String
  name     String
  url      String

  ECard ECard[]
}

model Plans {
  name  String @unique
  price Float

  ECard ECard[]
}

model CardGallery {
  id      String  @id @default(cuid())
  url     String
  ECard   ECard?  @relation(fields: [eCardId], references: [id])
  eCardId String?
}
